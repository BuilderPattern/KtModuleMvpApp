apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'channel'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        multiDexEnabled true
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a'
//            abiFilters 'armeabi', 'arm64-v8a' //, 'x86', 'armeabi-v7a', 'x86_64'
        }

        packagingOptions {
            exclude 'META-INF/beans.xml'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

//    sourceSets {
//        main.jniLibs.srcDirs = ['libs']
//    }

    signingConfigs {
        release {
            storeFile file("/kt_mvp_module.keystore")
            storePassword "123456789"
            keyAlias "kt_mvp_module"
            keyPassword "123456789"
            v1SigningEnabled true
            v2SigningEnabled true//gradle2.2以上默认开启v2签名
        }
        debug {
            storeFile file("/kt_mvp_module.keystore")
            storePassword "123456789"
            keyAlias "kt_mvp_module"
            keyPassword "123456789"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"//不打印Log
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"//打印Log
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

channel {
    //指定渠道文件
    channelFile = file("/channel.txt")
    //多渠道包的输出目录，默认为new File(project.buildDir,"channel")
//    baseOutputDir = new File(project.projectDir, "channelDebug")
    baseOutputDir = new File(project.projectDir, "channelRelease")

    buildTimeDateFormat = 'yyyyMMdd'
    //多渠道包的命名规则，默认为：${appName}-${versionName}-${versionCode}-${flavorName}-${buildType}
    apkNameFormat = 'KtModule_V${versionName}_${buildTime}_${flavorName}_${buildType}'
    isFastMode = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    //arouter
    kapt rootProject.ext.dependencies.arouter_compiler

    implementation project(':module_base')

    if (!isModule.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_first')
        implementation project(':module_second')
        implementation project(':module_home')
        implementation project(':module_message')
        implementation project(':module_further')
        implementation project(':module_mine')
        implementation project(':module_video')
    }
}
